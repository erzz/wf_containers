name: NodeJS Tests

on:
  workflow_call:
    inputs:
      # <---------------- GENERAL SETTINGS --------------->
      node-version:
        required: false
        type: string
        description: "The version of NodeJS to use for your tests"
        default: "16"
      install-command:
        required: false
        type: string
        description: "Used to override the default command to install your dependencies e.g. yarn install"
        default: "yarn install --silent"
      # <---------------- ESLINT SETTINGS ---------------->
      eslint-enable:
        required: false
        type: boolean
        description: "To disable the eslint job set to false"
        default: true
      eslint-command:
        required: false
        type: string
        description: "Used to override the default command to execute ES Lint e.g. yarn lint:ci"
        default: "yarn lint:ci"
      # <--------------- NJSSCAN SETTINGS ---------------->
      njsscan-enable:
        required: false
        type: boolean
        description: "To disable the njsscan job set to false"
        default: true
      njsscan-default-config:
        required: false
        type: boolean
        description: "If you would rather use your own .njsscan configuration, set to false"
        default: true
      # <--------------- UNIT-TEST SETTINGS -------------->
      unit-test-enable:
        required: false
        type: boolean
        description: "To disable the unit-tests job set to false"
        default: true
      unit-test-command:
        required: false
        type: string
        description: "Used to override the default command to run your unit tests e.g. yarn test:unit-ci"
        default: "yarn test:unit-ci"
    secrets:
      # <-------------------- NPM AUTH ------------------->
      npm-token:
        required: false
        description: "If needing to authenticate with your NPM repository, provide the token which will be exposed as NPM_TOKEN"
    outputs:
      ref-slug:
        description: "A URL sanitized version of the github ref"
        value: ${{ jobs.eslint.outputs.ref-slug }}
      short-sha:
        description: "Captures the short SHA for use in this or later workflow jobs"
        value: ${{ jobs.eslint.outputs.short-sha }}

jobs:
  # <---------------------- ES LINT ---------------------->
  eslint:
    name: ES Lint
    runs-on: ubuntu-latest
    outputs:
      short-sha: ${{ env.GITHUB_SHA_SHORT }}
      ref-slug: ${{ env.GITHUB_REF_SLUG_URL }}
    if: ${{ inputs.eslint-enable }}
    env:
      NPM_TOKEN: ${{ secrets.npm-token }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Slugify github variables
        uses: rlespinasse/github-slug-action@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node-version }}

      - name: Lint
        run: |
          ${{ inputs.install-command }}
          ${{ inputs.eslint.command }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ES Lint Report
          path: 'eslint-report.html'

  # <---------------------  NJSSCAN ---------------------->
  njsscan:
    name: NJS Scan
    runs-on: ubuntu-latest
    if: ${{ inputs.njsscan-enable }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Get Configuration
        if: ${{ inputs.njsscan-default-config }}
        run: |
          echo "Fetching default configuration from erzz/workflows..."
          curl -L --fail -o .njsscan https://raw.githubusercontent.com/erzz/workflows/main/.github/workflows/configs/.njsscan || exit 1

      - name: nodejsscan scan
        id: njsscan
        uses: ajinabraham/njsscan-action@master
        with:
          args: '. --html --output njsscan.html || true'

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: NJS Scan Report
          path: 'njsscan.html'

  # <--------------------- UNIT TESTS --------------------->
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    if: ${{ inputs.unit-test-enable }}
    env:
      NPM_TOKEN: ${{ secrets.npm-token }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install Dependencies
        run: ${{ inputs.install-command }}

      - name: Execute Unit Tests
        run: ${{ inputs.unit-test-command }}

      - name: Upload Unit Test Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Unit Test & Coverage Reports
          path: |
            junit.xml
            test-report.html
            coverage/cobertura-coverage.xml
